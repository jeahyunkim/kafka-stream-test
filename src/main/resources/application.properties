
spring.cloud.stream.kafka.streams.binder.brokers=ckafka001.ba.nfra.io:9092,ckafka002.ba.nfra.io:9092,ckafka003.ba.nfra.io:9092,ckafka004.ba.nfra.io:9092,ckafka005.ba.nfra.io:9092
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde



# input1
spring.cloud.stream.bindings.input1.destination=input1.topic
spring.cloud.stream.kafka.streams.bindings.input1.consumer.applicationId=impression_input_5
spring.cloud.stream.bindings.input1.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.input1.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.input1.consumer.valueSerde=org.apache.kafka.common.serialization.Serdes$StringSerde


# input2
spring.cloud.stream.bindings.input2.destination=input2.topic
spring.cloud.stream.kafka.streams.bindings.input2.consumer.applicationId=shopping_input_1
spring.cloud.stream.bindings.input2.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.input2.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.input2.consumer.valueSerde=org.apache.kafka.common.serialization.Serdes$StringSerde
